{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "AccountDetails": {
      "description": "Details of the account.",
      "properties": {
        "accountName": {
          "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-]+)$",
          "type": "string"
        },
        "correlatorId": {
          "description": "The opaque correlator id for this account.",
          "type": "string"
        },
        "directRouting": {
          "$ref": "#/definitions/TeamsDrConfig",
          "description": "Teams Direct Routing (DR) Account Configuration. Only accepted if DR is enabled."
        },
        "directRoutingEnabled": {
          "description": "Indicates that Teams Direct Routing (DR) enabled for this account.",
          "type": "boolean"
        },
        "teamsCommonConfig": {
          "$ref": "#/definitions/TeamsCommonConfig",
          "description": "Teams Common Account Configuration required for OC and TPM"
        },
        "teamsOcConfig": {
          "$ref": "#/definitions/TeamsOcConfig",
          "description": "Teams Operator Connect (OC) Account Configuration. Only accepted if OC is enabled."
        },
        "teamsOcEnabled": {
          "description": "Indicates that Teams Operator Connect (OC) is enabled for this account.",
          "type": "boolean"
        },
        "teamsTpmConfig": {
          "$ref": "#/definitions/TeamsTpmConfig",
          "description": "Teams Phone Mobile (TPM) Account Configuration. Only accepted if TPM is enabled."
        },
        "teamsTpmEnabled": {
          "description": "Indicates that Teams Phone Mobile (TPM) is enabled for this account.",
          "type": "boolean"
        },
        "zoomConfig": {
          "$ref": "#/definitions/ZoomConfig",
          "description": "Zoom Account Configuration. Only accepted if Zoom is enabled."
        },
        "zoomEnabled": {
          "description": "Indicates that Zoom is enabled for this account.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AccountDetailsUpdate": {
      "description": "Details of the account.",
      "properties": {
        "accountName": {
          "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-]+)$",
          "type": "string"
        },
        "correlatorId": {
          "description": "The opaque correlator id for this account.",
          "type": "string"
        },
        "directRouting": {
          "$ref": "#/definitions/TeamsDrConfigUpdate",
          "description": "Teams Direct Routing (DR) Account Configuration. Only accepted if DR is enabled."
        },
        "directRoutingEnabled": {
          "description": "Indicates that Teams Direct Routing (DR) enabled for this account.",
          "type": "boolean"
        },
        "teamsCommonConfig": {
          "$ref": "#/definitions/TeamsCommonConfigUpdate",
          "description": "Teams Common Account Configuration required for OC and TPM"
        },
        "teamsOcConfig": {
          "$ref": "#/definitions/TeamsOcConfig",
          "description": "Teams Operator Connect (OC) Account Configuration. Only accepted if OC is enabled."
        },
        "teamsOcEnabled": {
          "description": "Indicates that Teams Operator Connect (OC) is enabled for this account.",
          "type": "boolean"
        },
        "teamsTpmConfig": {
          "$ref": "#/definitions/TeamsTpmConfig",
          "description": "Teams Phone Mobile (TPM) Account Configuration. Only accepted if TPM is enabled."
        },
        "teamsTpmEnabled": {
          "description": "Indicates that Teams Phone Mobile (TPM) is enabled for this account.",
          "type": "boolean"
        },
        "zoomConfig": {
          "$ref": "#/definitions/ZoomConfig",
          "description": "Zoom Account Configuration. Only accepted if Zoom is enabled."
        },
        "zoomEnabled": {
          "description": "Indicates that Zoom is enabled for this account.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AccountName": {
      "description": "Utility model for Account names.",
      "properties": {
        "accountName": {
          "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-]+)$",
          "type": "string"
        }
      },
      "required": [
        "accountName"
      ],
      "type": "object"
    },
    "AccountResponse": {
      "description": "Details of the account as returned on a GET request.",
      "properties": {
        "details": {
          "$ref": "#/definitions/AccountDetails",
          "description": "The details of the account."
        },
        "directRoutingProvisioningState": {
          "$ref": "#/definitions/TeamsDrSubdomainProvisioningState",
          "description": "The provisioning state of Teams Direct Routing DNS domains."
        },
        "etag": {
          "description": "ETag for use with If-Match headers for optimistic concurrency.",
          "type": "string"
        },
        "name": {
          "description": "Name of the account.",
          "minLength": 1,
          "type": "string"
        },
        "serviceProvisioningErrors": {
          "$ref": "#/definitions/ServiceProvisioningErrors",
          "description": "Error messages where syncing to UC services has failed."
        },
        "serviceProvisioningStatus": {
          "$ref": "#/definitions/ServiceProvisioningState",
          "description": "Status of syncing changes to this object to relevant backend services."
        },
        "teamsDrSubCount": {
          "description": "Count of Teams Direct Routing subscribers for this account.",
          "format": "int64",
          "type": "integer"
        },
        "teamsOcSubCount": {
          "description": "Count of Teams Operator Connect subscribers for this account.",
          "format": "int64",
          "type": "integer"
        },
        "teamsTpmSubCount": {
          "description": "Count of Teams Phone Mobile subscribers for this account.",
          "format": "int64",
          "type": "integer"
        },
        "zoomSubCount": {
          "description": "Count of Zoom subscribers for this account.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "AccountResponsePaginatedList": {
      "description": "Paginated list of Account Responses",
      "properties": {
        "nextLink": {
          "description": "Link to the next page (if appropriate).",
          "type": "string"
        },
        "numberOfRecords": {
          "description": "The number of records returned for this page.",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "description": "The list of records for this page.",
          "items": {
            "$ref": "#/definitions/AccountResponse"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "AssignmentStatus": {
      "description": "Indicates whether a number is assigned to a user. This is only relevant for some UC providers.",
      "enum": [
        "TPM Assigned",
        "TPM Unassigned",
        "OC Assigned",
        "OC Unassigned",
        "Not Applicable"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "AssignmentStatus",
        "values": [
          {
            "description": "The phone number a TPM number and is assigned to a user.",
            "name": "TpmAssigned",
            "value": "TPM Assigned"
          },
          {
            "description": "The phone number a TPM number and is not assigned to a user.",
            "name": "TpmUnassigned",
            "value": "TPM Unassigned"
          },
          {
            "description": "The phone number is a Teams Operator Connect number and is assigned to a user.",
            "name": "OcAssigned",
            "value": "OC Assigned"
          },
          {
            "description": "The phone number is a Teams Operator Connect number and is not assigned to a user.",
            "name": "OcUnassigned",
            "value": "OC Unassigned"
          },
          {
            "description": "The phone number is not configured for use with any services that require the number to be assigned to a user.",
            "name": "NA",
            "value": "Not Applicable"
          }
        ]
      }
    },
    "BatchNumbersDelete": {
      "description": "A list of phone numbers to delete.",
      "properties": {
        "numbers": {
          "description": "The list of number to delete. At most 100 can be deleted in one request.",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          },
          "maxItems": 100,
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "numbers"
      ],
      "type": "object"
    },
    "BatchNumbersPut": {
      "description": "List of phone numbers to be uploaded to an account via a PUT request.",
      "properties": {
        "numbers": {
          "description": "The list of numbers to upload. At most 100 can be uploaded in one request.",
          "items": {
            "$ref": "#/definitions/BatchNumbersPutItem"
          },
          "maxItems": 100,
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "numbers"
      ],
      "type": "object"
    },
    "BatchNumbersPutItem": {
      "description": "And individual phone number and configuration to be uploaded as part of a bulk request.",
      "properties": {
        "details": {
          "$ref": "#/definitions/NumberDetails",
          "description": "The configuration for the number uploaded."
        },
        "phoneNumber": {
          "description": "Phone number in E.164 format.",
          "maxLength": 16,
          "minLength": 3,
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "type": "string"
        }
      },
      "required": [
        "phoneNumber",
        "details"
      ],
      "type": "object"
    },
    "BatchNumbersResponse": {
      "description": "The response to a bulk upload of phone numbers.",
      "properties": {
        "numbers": {
          "description": "A list of configurations for a set of phone numbers provisioned in ACG.",
          "items": {
            "$ref": "#/definitions/NumberResponse"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "numbers"
      ],
      "type": "object"
    },
    "ContactDetails": {
      "description": "Contact details for an individual.",
      "properties": {
        "companyName": {
          "description": "The company name of the contact detail.",
          "type": "string"
        },
        "companySize": {
          "description": "The company size of the contact detail.",
          "type": "string"
        },
        "email": {
          "description": "The email of the contact detail.",
          "minLength": 1,
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the contact detail.",
          "minLength": 1,
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number of the contact detail.",
          "type": "string"
        }
      },
      "required": [
        "fullName",
        "email"
      ],
      "type": "object"
    },
    "CustomerRelationship": {
      "description": "Details of a customer relationship.",
      "properties": {
        "comment": {
          "description": "The comment of the customer relationship.",
          "type": "string"
        },
        "lastModifiedOn": {
          "description": "The time (ISO8601 format) when the customer relationship is last modified.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the customer relationship.",
          "type": "string"
        }
      },
      "required": [
        "status",
        "comment"
      ],
      "type": "object"
    },
    "CustomSipHeader": {
      "description": "Utility model for custom SIP headers.",
      "properties": {
        "customSipHeader": {
          "description": "Contents of the custom SIP header to use with this number. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length. The name of the custom header is set as part of deploying Azure Communications Gateway.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-])+$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DNSProvisioningState": {
      "description": "Possible values for DNS provisioning state of Teams Direct Routing domains",
      "enum": [
        "Provisioned",
        "NotProvisioned",
        "Inconsistent"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DNSProvisioningState",
        "values": [
          {
            "description": "The DNS provisioning state Provisioned.",
            "name": "Provisioned",
            "value": "Provisioned"
          },
          {
            "description": "The DNS provisioning state Not Provisioned.",
            "name": "NotProvisioned",
            "value": "NotProvisioned"
          },
          {
            "description": "The DNS provisioning state Inconsistent.",
            "name": "Inconsistent",
            "value": "Inconsistent"
          }
        ]
      }
    },
    "ErrorDetail": {
      "description": "The code and message for an error.",
      "properties": {
        "additionalProperties": {
          "description": "Additional properties that can be provided about the error.",
          "type": "object"
        },
        "code": {
          "description": "A machine readable error code.",
          "type": "string"
        },
        "details": {
          "description": "An array of details about specific errors that led to this error.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "An object containing more specific information about the error."
        },
        "message": {
          "description": "A human readable representation of the error.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object"
    },
    "ErrorResponse": {
      "description": "Contains details when the response code indicates an error.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error details."
        }
      },
      "required": [
        "error"
      ],
      "type": "object"
    },
    "InnerError": {
      "description": "More specific information on an error object.",
      "properties": {
        "code": {
          "description": "A machine readable error code.",
          "type": "string"
        },
        "innererror": {
          "description": "Inner error details if they exist.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Location": {
      "description": "A location used by Team Operator Connect or Teams Phone Mobile phone numbers.",
      "properties": {
        "additionalInfo": {
          "description": "The additional information of the location.",
          "type": "string"
        },
        "civicAddressId": {
          "description": "The civic address ID of the location.",
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "description": "The description of the location.",
          "type": "string"
        },
        "elin": {
          "description": "The elin of the location.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the location.",
          "minLength": 1,
          "type": "string"
        },
        "isDefault": {
          "description": "Flag indicating whether the location is default or not.",
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "civicAddressId"
      ],
      "type": "object"
    },
    "NumberDetails": {
      "description": "Read/Write configuration for a phone number provisioned in ACG.",
      "properties": {
        "customSipHeader": {
          "description": "Contents of the custom SIP header to use with this number. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length. The name of the custom header is set as part of deploying Azure Communications Gateway.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-])+$",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number in E.164 format.",
          "maxLength": 16,
          "minLength": 3,
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "type": "string"
        },
        "services": {
          "$ref": "#/definitions/NumberServices",
          "description": "Configuration for the individual UC services for this number."
        }
      },
      "required": [
        "services"
      ],
      "type": "object"
    },
    "NumberResponse": {
      "description": "The configuration for a phone number provisioned in ACG.",
      "properties": {
        "accountName": {
          "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-]+)$",
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/NumberDetails",
          "description": "The read/write configuration for this phone number."
        },
        "etag": {
          "description": "ETag for use with If-Match headers for optimistic concurrency.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number in E.164 format.",
          "maxLength": 16,
          "minLength": 3,
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "type": "string"
        },
        "serviceProvisioningErrors": {
          "$ref": "#/definitions/ServiceProvisioningErrors",
          "description": "Any error details returned by UC services."
        },
        "serviceProvisioningStatus": {
          "$ref": "#/definitions/ServiceProvisioningState",
          "description": "The provisioning state of the phone number with any UC services."
        },
        "status": {
          "$ref": "#/definitions/AssignmentStatus",
          "description": "The assigment status of this phone number."
        }
      },
      "required": [
        "phoneNumber",
        "accountName",
        "details"
      ],
      "type": "object"
    },
    "NumberResponsePaginatedList": {
      "description": "A paginated list of phone number configuration.",
      "properties": {
        "nextLink": {
          "description": "Link to the next page (if appropriate).",
          "type": "string"
        },
        "numberOfRecords": {
          "description": "The number of records returned for this page.",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "description": "The list of records for this page.",
          "items": {
            "$ref": "#/definitions/NumberResponse"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "NumberServices": {
      "description": "Configuration for UC services for a phone number.",
      "properties": {
        "teamsDrEnabled": {
          "description": "Indicates that Teams Direct Routing (DR) is enabled for this number.",
          "type": "boolean"
        },
        "teamsOcEnabled": {
          "description": "Indicates that Teams Operator Connect (OC) is enabled for this number.",
          "type": "boolean"
        },
        "teamsOcNumberConfig": {
          "$ref": "#/definitions/TeamsOcNumberConfig",
          "description": "Teams Operator Connect (OC) Number Configuration"
        },
        "teamsTpmEnabled": {
          "description": "Indicates that Teams Phone Mobile (TPM) is enabled for this number.",
          "type": "boolean"
        },
        "teamsTpmNumberConfig": {
          "$ref": "#/definitions/TeamsTpmNumberConfig",
          "description": "Teams Phone Mobile (TPM) Number Configuration"
        },
        "zoomEnabled": {
          "description": "Indicates that Zoom is enabled for this number.",
          "type": "boolean"
        }
      },
      "required": [
        "teamsOcEnabled",
        "teamsDrEnabled",
        "zoomEnabled"
      ],
      "type": "object"
    },
    "PhoneNumber": {
      "description": "Utility model for phone numbers.",
      "properties": {
        "phoneNumber": {
          "description": "Phone number in E.164 format.",
          "maxLength": 16,
          "minLength": 3,
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "type": "string"
        }
      },
      "required": [
        "phoneNumber"
      ],
      "type": "object"
    },
    "PhoneNumbers": {
      "description": "A list of phone numbers",
      "properties": {
        "numbers": {
          "description": "Array containing a list of phone numbers.",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "numbers"
      ],
      "type": "object"
    },
    "ProvisioningError": {
      "description": "A provisioning error reported from a UC service.",
      "properties": {
        "errorCode": {
          "description": "The error code returned from the service.",
          "type": "string"
        },
        "message": {
          "description": "The error message returned from the service.",
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/ServiceEnum",
          "description": "The service the error relates to."
        }
      },
      "required": [
        "service",
        "errorCode"
      ],
      "type": "object"
    },
    "RfiDetails": {
      "description": "Details of an RFI.",
      "properties": {
        "consentedCountries": {
          "description": "The list of consented countries.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "consentedOn": {
          "description": "The time (ISO8601 format) when the operator consent is created.",
          "format": "date-time",
          "type": "string"
        },
        "contacts": {
          "description": "The list of tenant contacts.",
          "items": {
            "$ref": "#/definitions/ContactDetails"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "customerRelationship": {
          "$ref": "#/definitions/CustomerRelationship",
          "description": "The customer relationship of the operator consent."
        },
        "id": {
          "description": "The ID of the Request for Information.",
          "type": "string"
        },
        "lastModifiedOn": {
          "description": "The time (ISO8601 format) when the operator consent is last modified.",
          "format": "date-time",
          "type": "string"
        },
        "operatorId": {
          "description": "The operator ID of the operator consent.",
          "type": "string"
        },
        "productContext": {
          "description": "Will always be 'teams'.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/RFIStatus",
          "description": "The status of the operator consent."
        },
        "tenantId": {
          "description": "The AAD tenant ID of the Request for Information.",
          "type": "string"
        }
      },
      "required": [
        "consentedCountries",
        "customerRelationship"
      ],
      "type": "object"
    },
    "RfiDetailsPaginatedList": {
      "description": "A paginated list of RFI details.",
      "properties": {
        "nextLink": {
          "description": "Link to the next page (if appropriate).",
          "type": "string"
        },
        "numberOfRecords": {
          "description": "The number of records returned for this page.",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "description": "The list of records for this page.",
          "items": {
            "$ref": "#/definitions/RfiDetails"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "RFIStatus": {
      "description": "The possible state for an RFI.",
      "enum": [
        "Active",
        "Suspended",
        "Removed"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "RFIStatus",
        "values": [
          {
            "description": "The RFI is active.",
            "name": "Active",
            "value": "Active"
          },
          {
            "description": "The RFI is suspended.",
            "name": "Suspended",
            "value": "Suspended"
          },
          {
            "description": "The RFI is removed.",
            "name": "Removed",
            "value": "Removed"
          }
        ]
      }
    },
    "ServiceEnum": {
      "description": "The UC service supported by the API.",
      "enum": [
        "oc",
        "tpm",
        "dr",
        "zoom"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ServiceEnum",
        "values": [
          {
            "description": "Teams Operator Connect.",
            "name": "Oc",
            "value": "oc"
          },
          {
            "description": "Teams Phone Mobile.",
            "name": "Tpm",
            "value": "tpm"
          },
          {
            "description": "Teams Direct Routing.",
            "name": "Dr",
            "value": "dr"
          },
          {
            "description": "Zoom",
            "name": "Zoom",
            "value": "zoom"
          }
        ]
      }
    },
    "ServiceProvisioningErrors": {
      "description": "List of all service provisioning errors for the object.",
      "properties": {
        "allErrors": {
          "description": "List of service provisioning errors.",
          "items": {
            "$ref": "#/definitions/ProvisioningError"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "allErrors"
      ],
      "type": "object"
    },
    "ServiceProvisioningState": {
      "description": "The provisioning states of an object on any relevant UC service.",
      "enum": [
        "Pending",
        "Success",
        "Failed"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ServiceProvisioningState",
        "values": [
          {
            "description": "The object is pending provisioning.",
            "name": "Pending",
            "value": "Pending"
          },
          {
            "description": "The object has been provisioned in the relevnat UC service.",
            "name": "Success",
            "value": "Success"
          },
          {
            "description": "The object provisioning operation failed with the relevant UC service.",
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "TeamsCapabilities": {
      "description": "The Teams capabilities available for numbers with OC or TPM services enabled.",
      "properties": {
        "choosableCapabilities": {
          "description": "Choosable capabilities for phone numbers.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mandatoryCapabilities": {
          "description": "Mandatory capabilities for phone numbers.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The capability plan name.",
          "type": "string"
        },
        "offerTypes": {
          "description": "The offer types available.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "supportsTollFree": {
          "description": "Boolean indicating if Toll free is supported.",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "offerTypes",
        "mandatoryCapabilities",
        "choosableCapabilities",
        "supportsTollFree"
      ],
      "type": "object"
    },
    "TeamsCapabilitiesPaginatedList": {
      "description": "Paginated list of Teams capabilities.",
      "properties": {
        "nextLink": {
          "description": "Link to the next page (if appropriate).",
          "type": "string"
        },
        "numberOfRecords": {
          "description": "The number of records returned for this page.",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "description": "The list of records for this page.",
          "items": {
            "$ref": "#/definitions/TeamsCapabilities"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "TeamsCivicAddress": {
      "description": "A civic address available for Teams OC or TPM users.",
      "properties": {
        "cityOrTown": {
          "description": "The city or town of the civic address.",
          "type": "string"
        },
        "cityOrTownAlias": {
          "description": "The city or town alias of the civic address.",
          "type": "string"
        },
        "companyId": {
          "description": "The company ID of the civic address.",
          "type": "string"
        },
        "companyName": {
          "description": "The company name of the civic address.",
          "type": "string"
        },
        "country": {
          "description": "The country of the civic address.",
          "type": "string"
        },
        "countyOrDistrict": {
          "description": "The county or district of the civic address.",
          "type": "string"
        },
        "defaultLocationId": {
          "description": "The default location ID of the civic address.",
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "description": "The description of the civic address.",
          "type": "string"
        },
        "houseNumber": {
          "description": "The house number of the civic address.",
          "type": "string"
        },
        "houseNumberSuffix": {
          "description": "The house number suffix of the civic address.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the civic address.",
          "minLength": 1,
          "type": "string"
        },
        "latitude": {
          "description": "The latitude of the civic address.",
          "type": "string"
        },
        "locations": {
          "description": "The list of locations associated with the civic address.",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "type": "array"
        },
        "longitude": {
          "description": "The longitude of the civic address.",
          "type": "string"
        },
        "partnerId": {
          "description": "The partner ID of the civic address.",
          "type": "string"
        },
        "postalOrZipCode": {
          "description": "The postal or zip code of the civic address.",
          "type": "string"
        },
        "postDirectional": {
          "description": "The post directional of the civic address.",
          "type": "string"
        },
        "preDirectional": {
          "description": "The pre directional of the civic address.",
          "type": "string"
        },
        "stateOrProvince": {
          "description": "The state or province of the civic address.",
          "type": "string"
        },
        "streetName": {
          "description": "The street name of the civic address.",
          "type": "string"
        },
        "streetSuffix": {
          "description": "The street suffix of the civic address.",
          "type": "string"
        },
        "tenantId": {
          "description": "The customer tenant ID of the civic address.",
          "type": "string"
        },
        "validationStatus": {
          "$ref": "#/definitions/ValidationStatus",
          "description": "The validation status of the civic address."
        }
      },
      "required": [
        "id",
        "defaultLocationId"
      ],
      "type": "object"
    },
    "TeamsCivicAddressPaginatedList": {
      "description": "A paginated list of civic addresses available for Teams OC or TPM users.",
      "properties": {
        "nextLink": {
          "description": "Link to the next page (if appropriate).",
          "type": "string"
        },
        "numberOfRecords": {
          "description": "The number of records returned for this page.",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "description": "The list of records for this page.",
          "items": {
            "$ref": "#/definitions/TeamsCivicAddress"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "TeamsCommonConfig": {
      "description": "Configuration that is common for all Teams services on a given account.",
      "properties": {
        "syncEnabled": {
          "description": "Is data provisioned through ACG being synced to Teams.",
          "type": "boolean"
        },
        "tenantId": {
          "description": "The Microsoft Teams Tenant ID of the Account. This can only be updated if no OC or TPM numbers are configured in this account.",
          "type": "string"
        }
      },
      "required": [
        "tenantId",
        "syncEnabled"
      ],
      "type": "object"
    },
    "TeamsCommonConfigUpdate": {
      "description": "Configuration that is common for all Teams services on a given account.",
      "properties": {
        "syncEnabled": {
          "description": "Is data provisioned through ACG being synced to Teams.",
          "type": "boolean"
        },
        "tenantId": {
          "description": "The Microsoft Teams Tenant ID of the Account. This can only be updated if no OC or TPM numbers are configured in this account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TeamsDrConfig": {
      "description": "Configuration specific to Teams Direct Routing.",
      "properties": {
        "actualSubdomainTokens": {
          "$ref": "#/definitions/TeamsDrSubdomainTokens",
          "description": "DNS TXT value for the Direct Routing regions, as provided by the customer from their Microsoft 365 Admin Center."
        },
        "callScreening": {
          "description": "Enables/disables caller ID screening for the account. Caller ID screening is enabled by default.",
          "type": "boolean"
        },
        "subdomain": {
          "description": "Customer-specific domain name label. Can only contain letters, numbers, underscores and dashes. Can be up to 10 characters in length.",
          "maxLength": 10,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-]+)$",
          "type": "string"
        },
        "subdomainProvisionedState": {
          "$ref": "#/definitions/DNSProvisioningState",
          "description": "Status of DNS configuration and the DNS TXT values for the DNS records"
        },
        "subdomainTokens": {
          "$ref": "#/definitions/TeamsDrSubdomainTokens",
          "description": "DNS TXT value for the Direct Routing regions, as provided by the customer from their Microsoft 365 Admin Center."
        }
      },
      "required": [
        "callScreening",
        "subdomain",
        "subdomainTokens"
      ],
      "type": "object"
    },
    "TeamsDrConfigUpdate": {
      "description": "Configuration specific to Teams Direct Routing.",
      "properties": {
        "actualSubdomainTokens": {
          "$ref": "#/definitions/TeamsDrSubdomainTokensUpdate",
          "description": "DNS TXT value for the Direct Routing regions, as provided by the customer from their Microsoft 365 Admin Center."
        },
        "callScreening": {
          "description": "Enables/disables caller ID screening for the account. Caller ID screening is enabled by default.",
          "type": "boolean"
        },
        "subdomain": {
          "description": "Customer-specific domain name label. Can only contain letters, numbers, underscores and dashes. Can be up to 10 characters in length.",
          "maxLength": 10,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9_-]+)$",
          "type": "string"
        },
        "subdomainProvisionedState": {
          "$ref": "#/definitions/DNSProvisioningState",
          "description": "Status of DNS configuration and the DNS TXT values for the DNS records"
        },
        "subdomainTokens": {
          "$ref": "#/definitions/TeamsDrSubdomainTokensUpdate",
          "description": "DNS TXT value for the Direct Routing regions, as provided by the customer from their Microsoft 365 Admin Center."
        }
      },
      "type": "object"
    },
    "TeamsDrSubdomainProvisioningState": {
      "description": "The provisioning state of Teams Direct Routing domains.",
      "properties": {
        "subdomainStatus": {
          "$ref": "#/definitions/DNSProvisioningState",
          "description": "The provisioning status of the domains."
        },
        "subdomainTokens": {
          "$ref": "#/definitions/TeamsDrSubdomainTokens",
          "description": "The DNS TXT values of the domains the state relates to."
        }
      },
      "required": [
        "subdomainStatus"
      ],
      "type": "object"
    },
    "TeamsDrSubdomainToken": {
      "description": "A DNS TXT value.",
      "properties": {
        "token": {
          "description": "DNS TXT value for the first region, as provided by the customer from their Microsoft 365 Admin Center. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9=_-]+)$",
          "type": "string"
        }
      },
      "required": [
        "token"
      ],
      "type": "object"
    },
    "TeamsDrSubdomainTokens": {
      "description": "DNS TXT value for the region, as provided by the customer from their Microsoft 365 Admin Center. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
      "properties": {
        "region1Token": {
          "description": "DNS TXT value for the first region, as provided by the customer from their Microsoft 365 Admin Center. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9=_-]+)$",
          "type": "string"
        },
        "region2Token": {
          "description": "DNS TXT value for the second region, as provided by the customer from their Microsoft 365 Admin Center. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9=_-]+)$",
          "type": "string"
        }
      },
      "required": [
        "region1Token",
        "region2Token"
      ],
      "type": "object"
    },
    "TeamsDrSubdomainTokensUpdate": {
      "description": "DNS TXT value for the region, as provided by the customer from their Microsoft 365 Admin Center. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
      "properties": {
        "region1Token": {
          "description": "DNS TXT value for the first region, as provided by the customer from their Microsoft 365 Admin Center. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9=_-]+)$",
          "type": "string"
        },
        "region2Token": {
          "description": "DNS TXT value for the second region, as provided by the customer from their Microsoft 365 Admin Center. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^([A-Za-z0-9=_-]+)$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TeamsOcConfig": {
      "description": "Account onfiguration specific to Teams Operator Connect.",
      "type": "object"
    },
    "TeamsOcNumberConfig": {
      "description": "Phone number configuration for Teams OC phone numbers.",
      "properties": {
        "additionalUsages": {
          "description": "The additional usages for this phone number.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowTenantAddressUpdate": {
          "default": false,
          "description": "If the enterprise is allowed to update the address for this phone number.",
          "type": "boolean"
        },
        "choosableCapabilities": {
          "description": "The choosable capabilities for this phone number.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "civicAddressId": {
          "description": "The ID of the civic address to be used as the emergency address for this phone number.",
          "type": "string"
        },
        "displayedCountryCode": {
          "description": "The country code to be displayed with this phone number",
          "type": "string"
        },
        "locationId": {
          "description": "The ID of the location to be used as the emergency address for this phone number.",
          "type": "string"
        },
        "usage": {
          "description": "The usage for this phone number.",
          "type": "string"
        }
      },
      "required": [
        "usage",
        "choosableCapabilities"
      ],
      "type": "object"
    },
    "TeamsService": {
      "description": "The Teams Service supported by this API that require provisioning in Teams.",
      "enum": [
        "oc",
        "tpm"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "TeamsService",
        "values": [
          {
            "description": "Teams Operator Connect.",
            "name": "Oc",
            "value": "oc"
          },
          {
            "description": "Teams Phone Mobile.",
            "name": "Tpm",
            "value": "tpm"
          }
        ]
      }
    },
    "TeamsSyncEnabled": {
      "description": "Indicating if the account should be syncing configuration from ACG to Teams.",
      "properties": {
        "teamsSyncEnabledBool": {
          "description": "Boolean indicating if account configuration is synced to Teams.",
          "type": "boolean"
        }
      },
      "required": [
        "teamsSyncEnabledBool"
      ],
      "type": "object"
    },
    "TeamsTpmConfig": {
      "description": "Account configuration specific to Teams Phone Mobile.",
      "type": "object"
    },
    "TeamsTpmNumberConfig": {
      "description": "Phone number configuration for Teams Phone Mobile phone numbers.",
      "properties": {
        "additionalUsages": {
          "description": "The additional usages for this phone number.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowTenantAddressUpdate": {
          "default": false,
          "description": "If the enterprise is allowed to update the address for this phone number.",
          "type": "boolean"
        },
        "choosableCapabilities": {
          "description": "The choosable capabilities for this phone number.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "civicAddressId": {
          "description": "The ID of the civic address to be used as the emergency address for this phone number.",
          "type": "string"
        },
        "displayedCountryCode": {
          "description": "The country code to be displayed with this phone number",
          "type": "string"
        },
        "locationId": {
          "description": "The ID of the location to be used as the emergency address for this phone number.",
          "type": "string"
        },
        "usage": {
          "description": "The usage for this phone number.",
          "type": "string"
        }
      },
      "required": [
        "usage",
        "choosableCapabilities"
      ],
      "type": "object"
    },
    "ValidationStatus": {
      "description": "The possible validation status of Teams Civic Addresses.",
      "enum": [
        "NotValidated",
        "Validated"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ValidationStatus",
        "values": [
          {
            "description": "The civic address is not validated.",
            "name": "NotValidated",
            "value": "NotValidated"
          },
          {
            "description": "The civic address is validated.",
            "name": "Validated",
            "value": "Validated"
          }
        ]
      }
    },
    "Versions": {
      "description": "The Microsoft.Voiceservices service versions.",
      "enum": [
        "2024-01-30-preview"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "Versions",
        "values": [
          {
            "description": "The 2024-01-30-preview version of the Microsoft.Voiceservices service.",
            "name": "2024-01-30-preview",
            "value": "2024-01-30-preview"
          }
        ]
      }
    },
    "ZoomConfig": {
      "description": "Account configuration specific to Zoom.",
      "type": "object"
    }
  },
  "info": {
    "title": "Microsoft.VoiceServices.ProvisioningAPI",
    "version": "2024-01-30-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "parameters": {
    "ApiVersionParameter": {
      "description": "The API version to use",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string",
      "x-ms-client-name": "apiVersion",
      "x-ms-parameter-location": "method"
    },
    "CustomFilterQueryParameter": {
      "description": "Filter the result list using the given expression",
      "in": "query",
      "name": "filter",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CustomMaxPageSizeQueryParameter": {
      "default": 200,
      "description": "The maximum number of result items per page.",
      "format": "int32",
      "in": "query",
      "maximum": 500,
      "minimum": 1,
      "name": "maxpagesize",
      "required": false,
      "type": "integer",
      "x-ms-client-name": "maxPageSize",
      "x-ms-parameter-location": "method"
    },
    "CustomPageNumberQueryParameter": {
      "default": 1,
      "description": "The page number of the current page.",
      "format": "int32",
      "in": "query",
      "minimum": 1,
      "name": "pagenumber",
      "required": false,
      "type": "integer",
      "x-ms-client-name": "pageNumber",
      "x-ms-parameter-location": "method"
    },
    "CustomSkipQueryParameter": {
      "description": "The number of result items to skip.",
      "format": "int32",
      "in": "query",
      "minimum": 0,
      "name": "skip",
      "required": false,
      "type": "integer",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/account/{accountName}/numbers": {
      "get": {
        "description": "Get a list of Numbers on the specified Account. The returned list is paginated.",
        "operationId": "Accounts_GetNumbers",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/CustomFilterQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomSkipQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomMaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomPageNumberQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NumberResponsePaginatedList"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get list of Numbers on an Account.",
        "tags": [
          "Number"
        ],
        "x-ms-examples": {
          "Get list of Numbers on an Account (Maximum).": {
            "$ref": "./examples/Accounts_GetNumbers_MaximumSet_Gen.json"
          },
          "Get list of Numbers on an Account (Minimum).": {
            "$ref": "./examples/Accounts_GetNumbers_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/account/{accountName}/numbers/{phoneNumber}": {
      "delete": {
        "description": "Delete a Number on the specified Account.",
        "operationId": "Accounts_DeletePhoneNumbers",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The phone number of the number to delete.",
            "in": "path",
            "maxLength": 16,
            "minLength": 3,
            "name": "phoneNumber",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Delete Number",
        "tags": [
          "Number"
        ],
        "x-ms-examples": {
          "Delete Number (Maximum).": {
            "$ref": "./examples/Accounts_DeletePhoneNumbers_MaximumSet_Gen.json"
          },
          "Delete Number (Minimum).": {
            "$ref": "./examples/Accounts_DeletePhoneNumbers_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "description": "Get details of a specific Number associated with an Account.",
        "operationId": "Accounts_GetPhoneNumbers",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The phone numberto get configuration for.",
            "in": "path",
            "maxLength": 16,
            "minLength": 3,
            "name": "phoneNumber",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NumberResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get a Number",
        "tags": [
          "Number"
        ],
        "x-ms-examples": {
          "Get a Number (Maximum).": {
            "$ref": "./examples/Accounts_GetPhoneNumbers_MaximumSet_Gen.json"
          },
          "Get a Number (Minimum).": {
            "$ref": "./examples/Accounts_GetPhoneNumbers_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "description": "Create or update a Number on the specified Account. The Number must have a UC service enabled and other configuration.",
        "operationId": "Accounts_PutPhoneNumbers",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The phone number to request details of.",
            "in": "path",
            "maxLength": 16,
            "minLength": 3,
            "name": "phoneNumber",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Makes a request conditional on a matching etag.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "description": "Makes a request conditional on a non-matching etag.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "description": "The number details for the phone numbers to upload.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NumberResponse"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/NumberResponse"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "The request conflicts with the current state of the server.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "412": {
            "description": "Precondition failed.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Create or update a Number.",
        "tags": [
          "Number"
        ],
        "x-ms-examples": {
          "Create or update a Number (Maximum).": {
            "$ref": "./examples/Accounts_PutPhoneNumbers_MaximumSet_Gen.json"
          },
          "Create or update a Number (Minimum).": {
            "$ref": "./examples/Accounts_PutPhoneNumbers_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/account/{accountName}/numbers:batch": {
      "delete": {
        "description": "Delete up to 100 numbers on the specified account.",
        "operationId": "Accounts_DeleteBatchNumbers",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The phone numbers to delete.",
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchNumbersDelete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Delete batches of numbers.",
        "tags": [
          "BatchNumbers"
        ],
        "x-ms-examples": {
          "Delete batches of numbers (Maximum).": {
            "$ref": "./examples/Accounts_DeleteBatchNumbers_MaximumSet_Gen.json"
          },
          "Delete batches of numbers (Minimum).": {
            "$ref": "./examples/Accounts_DeleteBatchNumbers_MinimumSet_Gen.json"
          }
        }
      },
      "post": {
        "description": "Create or update up to 100 Numbers on the specified account. Each Number must have a UC service enabled and other configuration.",
        "operationId": "Accounts_PostBatchNumbers",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The numbers to upload in a batch.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchNumbersPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNumbersResponse"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Create or update Numbers.",
        "tags": [
          "BatchNumbers"
        ],
        "x-ms-examples": {
          "Create or update Numbers (Maximum).": {
            "$ref": "./examples/Accounts_PostBatchNumbers_MaximumSet_Gen.json"
          },
          "Create or update Numbers (Minimum).": {
            "$ref": "./examples/Accounts_PostBatchNumbers_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/account/{accountName}/teams/capabilities": {
      "get": {
        "description": "Get a list of usages that can be used by a partner for teams enabled number. Returned as JSON mapping use case to capabilities",
        "operationId": "Accounts_GetCapabilities",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "The account name to query.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The phone numbers to query capabilities for.",
            "in": "body",
            "name": "phoneNumbers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhoneNumbers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TeamsCapabilitiesPaginatedList"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get the list of usages available",
        "x-ms-examples": {
          "Get the list of usages available (Maximum).": {
            "$ref": "./examples/Accounts_GetCapabilities_MaximumSet_Gen.json"
          },
          "Get the list of usages available (Minimum).": {
            "$ref": "./examples/Accounts_GetCapabilities_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/account/{accountName}/teams/civic-address/{civicAddressId}": {
      "get": {
        "description": "Get a specific Civic Address and its associated locations.",
        "operationId": "Accounts_GetTeamsCivicAddress",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the civic address to retrieve.",
            "in": "path",
            "name": "civicAddressId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TeamsCivicAddress"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get a Civic Address.",
        "x-ms-examples": {
          "Get a Civic Address (Maximum).": {
            "$ref": "./examples/Accounts_GetTeamsCivicAddress_MaximumSet_Gen.json"
          },
          "Get a Civic Address (Minimum).": {
            "$ref": "./examples/Accounts_GetTeamsCivicAddress_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/account/{accountName}/teams/civic-addresses": {
      "get": {
        "description": "Get a list of Civic Addresses and its associated locations for a specific Account. The returned list is paginated.",
        "operationId": "Accounts_GetTeamsCivicAddresses",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/CustomFilterQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomSkipQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomMaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomPageNumberQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TeamsCivicAddressPaginatedList"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get a list of Civic Addresses.",
        "x-ms-examples": {
          "Get a list of Civic Addresses (Maximum).": {
            "$ref": "./examples/Accounts_GetTeamsCivicAddresses_MaximumSet_Gen.json"
          },
          "Get a list of Civic Addresses (Minimum).": {
            "$ref": "./examples/Accounts_GetTeamsCivicAddresses_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/account/{accountName}/teams/sync": {
      "post": {
        "description": "Enable or disable syncing of provisioned data to Teams",
        "operationId": "Accounts_SetTeamsSync",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "JSON to indicate if data should by synced to Teams.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamsSyncEnabled"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Enable or disable syncing of provisioned data to Teams",
        "tags": [
          "TeamsSync"
        ],
        "x-ms-examples": {
          "Enable or disable syncing of provisioned data to Teams (Maximum).": {
            "$ref": "./examples/Accounts_SetTeamsSync_MaximumSet_Gen.json"
          },
          "Enable or disable syncing of provisioned data to Teams (Minimum).": {
            "$ref": "./examples/Accounts_SetTeamsSync_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "description": "Get list of Accounts with details. An Account represents an Enterprise or collection of users.",
        "operationId": "Accounts",
        "parameters": [
          {
            "$ref": "#/parameters/CustomFilterQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomSkipQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomMaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomPageNumberQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccountResponsePaginatedList"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get list of Accounts",
        "tags": [
          "Account"
        ],
        "x-ms-examples": {
          "Get list of Accounts (Maximum).": {
            "$ref": "./examples/Accounts_MaximumSet_Gen.json"
          },
          "Get list of Accounts (Minimum).": {
            "$ref": "./examples/Accounts_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/accounts/teamstenant/{tenantId}": {
      "get": {
        "description": "Get accounts with with Teams services using the specified Tenant ID",
        "operationId": "GetAccountsByTenant",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "The Teams tenant ID",
            "in": "path",
            "name": "tenantId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccountResponsePaginatedList"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get accounts with with Teams services using the specified Tenant ID",
        "tags": [
          "Account"
        ],
        "x-ms-examples": {
          "Get accounts with with Teams services using the specified Tenant ID (Maximum).": {
            "$ref": "./examples/GetAccountsByTenant_MaximumSet_Gen.json"
          },
          "Get accounts with with Teams services using the specified Tenant ID (Minimum).": {
            "$ref": "./examples/GetAccountsByTenant_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/accounts/{accountName}": {
      "delete": {
        "description": "Delete a specific Account using its Name. This will fail if any Numbers are provisioned on the Account.",
        "operationId": "Account_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Indicates if all subscribers under the account should also be deleted.",
            "in": "query",
            "name": "deleteAllSubs",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Delete Account.",
        "tags": [
          "Account"
        ],
        "x-ms-examples": {
          "Delete Account (Maximum).": {
            "$ref": "./examples/Account_Delete_MaximumSet_Gen.json"
          },
          "Delete Account (Minimum).": {
            "$ref": "./examples/Account_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "description": "Get details of a specific Account using its Name. An Account represents an Enterprise or collection of users.",
        "operationId": "Account_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Additionally return the provisioning state of the backends configured for this account (e.g. DNS subdomain provisioning for Microsoft Teams Direct Routing).",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get Account.",
        "tags": [
          "Account"
        ],
        "x-ms-examples": {
          "Get Account (Maximum).": {
            "$ref": "./examples/Account_Get_MaximumSet_Gen.json"
          },
          "Get Account (Minimum).": {
            "$ref": "./examples/Account_Get_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "description": "Create of update the details of an Account.",
        "operationId": "Account_Patch",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Makes a request conditional on a matching etag.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "description": "Makes a request conditional on a non-matching etag.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "description": "The Account to create or update.",
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDetailsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "The request conflicts with the current state of the server.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "412": {
            "description": "Precondition failed.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Create or update Account.",
        "tags": [
          "Account"
        ],
        "x-ms-examples": {
          "Create or update Account (Maximum).": {
            "$ref": "./examples/Account_Patch_MaximumSet_Gen.json"
          },
          "Create or update Account (Minimum).": {
            "$ref": "./examples/Account_Patch_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "description": "Create of update the details of an Account.",
        "operationId": "Account_Put",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Name of the account. Can only contain letters, numbers, underscores and dashes, and is case-sensitive. Can be up to 100 characters in length.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "accountName",
            "pattern": "^([A-Za-z0-9_-]+)$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Makes a request conditional on a matching etag.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "description": "Makes a request conditional on a non-matching etag.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "description": "The details of the account to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "The request conflicts with the current state of the server.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "412": {
            "description": "Precondition failed.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Create or update Account.",
        "tags": [
          "Account"
        ],
        "x-ms-examples": {
          "Create or update Account (Maximum).": {
            "$ref": "./examples/Account_Put_MaximumSet_Gen.json"
          },
          "Create or update Account (Minimum).": {
            "$ref": "./examples/Account_Put_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/numbers": {
      "get": {
        "description": "Get a list of Numbers from all Accounts. The returned list is paginated.",
        "operationId": "NumbersFromAllAccounts_ListAllNumbers",
        "parameters": [
          {
            "$ref": "#/parameters/CustomFilterQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomSkipQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomMaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomPageNumberQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Query information for a specific number.",
            "in": "query",
            "maxLength": 16,
            "minLength": 1,
            "name": "number",
            "pattern": "^\\+[1-9]\\d+$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NumberResponsePaginatedList"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get list of numbers",
        "tags": [
          "Numbers"
        ],
        "x-ms-examples": {
          "Get list of numbers (Maximum).": {
            "$ref": "./examples/NumbersFromAllAccounts_ListAllNumbers_MaximumSet_Gen.json"
          },
          "Get list of numbers (Minimum).": {
            "$ref": "./examples/NumbersFromAllAccounts_ListAllNumbers_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/teams/rfi/{tenantId}": {
      "get": {
        "description": "Get a specific RFT from the tenant ID.",
        "operationId": "Rfi_GetRfiByTenant",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "The tenant ID of the RFI.",
            "in": "path",
            "name": "tenantId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RfiDetails"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get an RFI by tenant ID",
        "tags": [
          "RFI"
        ],
        "x-ms-examples": {
          "Get an RFI by tenant ID (Maximum).": {
            "$ref": "./examples/Rfi_GetRfiByTenant_MaximumSet_Gen.json"
          },
          "Get an RFI by tenant ID (Minimum).": {
            "$ref": "./examples/Rfi_GetRfiByTenant_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/teams/rfi/{tenantId}/customer-relationship": {
      "put": {
        "description": "Update the Customer Relationship on the specified RFI.",
        "operationId": "Rfi_UpdateCustomerRelationship",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "The tenant ID of the RFI.",
            "in": "path",
            "name": "tenantId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The customer relationship to insert.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerRelationship"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CustomerRelationship"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "The request conflicts with the current state of the server.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "412": {
            "description": "Precondition failed.",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Update the Customer Relationship.",
        "tags": [
          "RFI"
        ],
        "x-ms-examples": {
          "Update the Customer Relationship (Maximum).": {
            "$ref": "./examples/Rfi_UpdateCustomerRelationship_MaximumSet_Gen.json"
          },
          "Update the Customer Relationship (Minimum).": {
            "$ref": "./examples/Rfi_UpdateCustomerRelationship_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/teams/rfis": {
      "get": {
        "description": "Get the list of Accounts that have submitted a Request for Information (i.e. have consented to being contacted).",
        "operationId": "Rfis_GetRfis",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "The Teams product context for the RFIs.",
            "in": "query",
            "name": "productContext",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/CustomFilterQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomSkipQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomMaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/CustomPageNumberQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RfiDetailsPaginatedList"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-ms-error-code": {
                "description": "Error code for specific error that occurred.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get list of Requests for Information (Consents).",
        "tags": [
          "RFIs"
        ],
        "x-ms-examples": {
          "Get list of Requests for Information (Consents) (Maximum).": {
            "$ref": "./examples/Rfis_GetRfis_MaximumSet_Gen.json"
          },
          "Get list of Requests for Information (Consents) (Minimum).": {
            "$ref": "./examples/Rfis_GetRfis_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "Oauth2": [
        "https://func-voiceservice-rp-prod-eastuseuap.azurewebsites.net/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "Oauth2": {
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "application",
      "scopes": {
        "https://func-voiceservice-rp-prod-eastuseuap.azurewebsites.net/.default": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "Account"
    },
    {
      "name": "BatchNumbers"
    },
    {
      "name": "Number"
    },
    {
      "name": "TeamsSync"
    },
    {
      "name": "Numbers"
    },
    {
      "name": "RFIs"
    },
    {
      "name": "RFI"
    }
  ]
}
